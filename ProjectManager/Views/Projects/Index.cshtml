@using ProjectManager.Models
@model IEnumerable<ProjectManager.Models.Grouped<string, Project>>
@{
    string strStatus = "";
    switch (ViewBag.StatusID)
    {
        case 1:
            strStatus = "進行中";
            break;
        case 2:
            strStatus = "審議中";
            break;
        case 3:
            strStatus = "已結案";
            break;
        default:
            break;
    }
    ViewBag.Title = strStatus;
    ViewBag.Activity = "專案列表";
}
@section style{
    <style>
        h4:hover {
            text-decoration: none;
            cursor: pointer;
        }
        .bookMark {
            position: relative;
            top: -6px;            
            float: right;
            margin-right: 0.5rem !important;
        }
        .ProjectCard {
            position: relative;
            display: -ms-flexbox;
            display: inline-block !important;
            -ms-flex-direction: column;
            flex-direction: column;
            min-width: 10rem;
            word-wrap: break-word;
            background-color: #fff;
            background-clip: border-box;
            border: 1.5px solid rgba(0, 0, 0, 0.1);
            border-radius: 0.3rem;
            margin-right: 1rem !important;
            margin-bottom: 0.5rem !important;
            margin-top: 0.25rem !important;
        }
            .ProjectCard .card-footer {
                padding: 0.75rem 1.25rem;
                background-color: #343a40 !important;
                padding-top: 0.5rem !important;
                padding-bottom: 1rem !important;               
            }
        .bg-alarm {
            background-color: #fab759 !important;
        }
    </style>
}


<div id="btn-plus" class="position-fixed" style="bottom:6em; right:10px;" hidden>
    <a href="#" class="btn btn-light rounded-circle shadow-lg"><span style="font-size:2em;color:lightgray"><i class="fas fa-plus"></i></span></a>
</div>

<div id="ProjectsOverview" class="container mt-5">
    @{int i = 0; }
    @foreach (var g in Model)
    {
        i++;
        <h4 class="text-dark my-4" style="font-size:20px;" data-Dept=Dept@(i)>
            <span class="float-left"><i class="fas fa-caret-down"></i></span>
            @g.Key
        </h4>

        <div class="collapsible my-4 container" id=Dept@(i)>
            @foreach (var item in g.group)
            {
                <a href="~/ProjectDetails/ProjectReport?ProjectGUID=@item.ProjectGUID" data-ProjectGUID="@item.ProjectGUID">
                    <div class="ProjectCard" style="width:18rem;">
                        @{
                            if ((bool)item.IsGeneralManagerConcerned)
                            {
                                <span class="bookMark" data-toggle="tooltip" title="總經理關注"><img style="width:28px;" src="~/image/bookmark_icon30.png" /></span>
                            }
                        }
                        <div class="card-header text-center text-muted ">
                            <div class="row align-items-center mx-0">                                
                                <div class="col pl-3">
                                    <h6 class="mb-0">
                                        @Html.DisplayFor(m => item.ProjectName)
                                    </h6>
                                </div>
                            </div>
                        </div>

                        <div class="card-footer">
                            <span class="text-light">@Html.DisplayNameFor(m => m.group.FirstOrDefault().CompletedRate)</span>
                            <div class="progress">
                                @{
                                    string percent = string.Format("{0}%", item.CompletedRate);
                                    string value = item.CompletedRate.ToString();
                                }
                                <div class="progress-bar" role="progressbar" style="width: @percent;" aria-valuenow="@value" aria-valuemin="0" aria-valuemax="100">@percent</div>
                            </div>
                            <span class="text-light">@Html.DisplayNameFor(m => m.group.FirstOrDefault().DurationSavedRate)</span>
                            <div class="progress ">
                                @{
                                    percent = string.Format("{0}%", item.DurationSavedRate);
                                    value = item.DurationSavedRate.ToString();
                                    string absPercent = string.Format("{0}%", Math.Abs(item.DurationSavedRate));
                                }
                                <div class="progress-bar " role="progressbar" style="width: @absPercent;" aria-valuenow="@value" aria-valuemin="0" aria-valuemax="100">@percent</div>
                            </div>
                        </div>
                    </div>
                </a>
            }
        </div>
    }
</div>

@section asideRight{
    <div class="container text-light mt-3">
        <h4 class="d-inline-block">新增專案</h4><button id="demoBtn" class="btn btn-default ml-4">Demo</button>
        <form class="form-horizontal " action="~/Projects/CreateProject" method="post">
            <input name="ProjectID" type="hidden" class="form-control d-inline" style="width:10em;" value="test" />
            <div class="form-group">
                @Html.LabelFor(m => m.FirstOrDefault().group.FirstOrDefault().ProjectName)
                @Html.TextBox("ProjectName", null, new { @class = "form-control", style = "width:12em;" })
            </div>

            <div class="row ">
                <div class="col-6 form-group">
                    @Html.LabelFor(m => m.FirstOrDefault().group.FirstOrDefault().RequiredDeptGUID)
                    @Html.DropDownList("RequiredDeptGUID", (SelectList)ViewBag.Departments, "請選擇", new { @class = "form-control", style = "width:12em;" })
                </div>
                <div class="col-6 form-group">
                    @Html.LabelFor(m => m.FirstOrDefault().group.FirstOrDefault().RequiredDeptPMGUID)
                    @Html.DropDownList("RequiredDeptPMGUID", (SelectList)ViewBag.Employees, "請選擇", new { @class = "form-control", style = "width:12em;" })
                </div>
            </div>
            <div class="row ">
                <div class="col-6 form-group">
                    @Html.LabelFor(m => m.FirstOrDefault().group.FirstOrDefault().EstStartDate)<br />
                    <input name="EstStartDate" id="EstStartDate" type="date" class="form-control d-inline" style="width:12em;" />
                </div>
                <div class="col-6 form-group">
                    @Html.LabelFor(m => m.FirstOrDefault().group.FirstOrDefault().EstEndDate)<br />
                    <input name="EstEndDate" id="EstEndDate" type="date" class="form-control d-inline" style="width:12em;" />
                </div>
            </div>
            <div class="row">
                <div class="col-6 form-group">
                    @Html.LabelFor(m => m.FirstOrDefault().group.FirstOrDefault().ProjectStatusID)
                    @Html.DropDownList("ProjectStatusID", (SelectList)ViewBag.ProjectStatuses, "請選擇", new { @class = "form-control", style = "width:12em;" })
                </div>
                <div class="col-6 form-group">
                    @Html.LabelFor(m => m.FirstOrDefault().group.FirstOrDefault().ProjectCategoryID)
                    @Html.DropDownList("ProjectCategoryID", (SelectList)ViewBag.ProjectCategories, "請選擇", new { @class = "form-control", style = "width:12em;" })
                </div>
            </div>
            <div class="row ">
                <div class="col-6 form-group">
                    @Html.Label("專案督導部門")
                    @Html.DropDownList("ProjectSupervisorDeptGUID", (SelectList)ViewBag.Departments, "請選擇", new { @class = "form-control", style = "width:12em;" })
                </div>
                <div class="col-6 form-group">
                    @Html.LabelFor(m => m.FirstOrDefault().group.FirstOrDefault().ProjectSupervisorGUID)
                    @Html.DropDownList("ProjectSupervisorGUID", (SelectList)ViewBag.Employees, "請選擇", new { @class = "form-control", style = "width:12em;" })
                </div>
            </div>
            <div class="row ">
                <div class="col-6 form-group">
                    @Html.LabelFor(m => m.FirstOrDefault().group.FirstOrDefault().ProjectBudget)
                    <input name="ProjectBudget" id="ProjectBudget" type="text" class="form-control d-inline" style="width:12em;" />
                </div>
                <div class="col-6 form-group ">
                    @Html.LabelFor(m => m.FirstOrDefault().group.FirstOrDefault().IsGeneralManagerConcerned)<br />
                    @Html.RadioButton("IsGeneralManagerConcerned", true, true, new { @class = "form-control d-inline align-middle", style = "width:1.2em;" })<span class="mr-2">是</span>
                    @Html.RadioButton("IsGeneralManagerConcerned", false, false, new { @class = "form-control d-inline align-middle", style = "width:1.2em;" })<span>否</span>
                </div>
            </div>

            <div id="formBtns" class="mt-5 mx-auto text-center ">
                <button id="cancelBtn" type="button" class="btn btn-light py-1 px-5">取消</button>
                <button id="confiredBtn" type="submit" class="btn btn-primary py-1 px-5">確認</button>
            </div>
        </form>
    </div>
}

@section script{
    <script>
        $(document).ready(function () {
            $(".rightOpenbtn").html('<i class="fas fa-plus"></i>');
            $('input[type="date"]').val("@string.Format("{0:yyyy-MM-dd}", DateTime.Now)");
            $('#ul_Projects').slideDown();
            switch (@ViewBag.StatusID)
            {
                case 1:
                    $('#li_ProjectDo').addClass('active');
                    break;
                case 2:
                    $('#li_ProjectCheck').addClass('active');
                    break;
                case 3:
                    $('#li_ProjectDone').addClass('active');
                    break;
                default:
                    break;
            }

            var createProjectForm = $('#CreateProjectForm');
            var Overview = $('#ProjectsOverview');

            $('#btn-plus>a').click(function () {
                $('button.rightOpenbtn').click();
            });
            $('#formBtns').children('button').click(function () {
                $('button.rightOpenbtn').click();
            });

            Overview.find('h4').on("click", function () {
                var _dept = "#" + $(this).attr("data-Dept");
                $(_dept).toggle("blind", {}, 300);
                $(this).find("i").toggleClass("fas fa-caret-down").toggleClass("fas fa-caret-right");                
            });

            $('#RequiredDeptGUID').change(GetEmployees);
            $('#ProjectSupervisorDeptGUID').change(GetSupervisor);
            //$('#EstStartDate').change(function () { $('#StartDate').val($(this).val());});
            //$('#EstEndDate').change(function () { $('#EndDate').val($(this).val()); });

            function GetEmployees() {
                $.getJSON("@Url.Action("GetEmployeesByDept","Projects")", { DeptGUID : $(this).val()}, function (data) {
                    var docFrag = $(document.createDocumentFragment());
                    $.each(data, function (index,emp) {
                        var opt = $('<option></option>').text(emp.EmployeeName).val(emp.EmployeeGUID);
                        docFrag.append(opt);
                    });
                    $('#RequiredDeptPMGUID').html(docFrag);
                });
            }
            function GetSupervisor() {
                $.getJSON("@Url.Action("GetEmployeesByDept","Projects")", { DeptGUID : $(this).val()}, function (data) {
                    var docFrag = $(document.createDocumentFragment());
                    $.each(data, function (index,emp) {
                        var opt = $('<option></option>').text(emp.EmployeeName).val(emp.EmployeeGUID);
                        docFrag.append(opt);
                    });
                    $('#ProjectSupervisorGUID').html(docFrag);
                });
            }

            $('[data-toggle="tooltip"]').tooltip();
            SetPrograssBar();

            function SetPrograssBar() {
                $('.progress-bar').each(function () {
                    if (parseInt($(this).attr('aria-valuenow')) < 0) {
                        $(this).addClass('bg-alarm');
                    }
                });
            }
            

            //Demo button
            $('#demoBtn').click(function () {                
                $.getJSON("@Url.Action("InsertProjectForDemo", "Projects")", null, function (data) {
                    
                });
                location.href = "/Projects/Index?ProjectStatusID=1";
                @*$('#PGUID').val('5bba4082-1ae8-4898-9f50-25b1881d1236');
                $('#ProjectName').val('Demo專案');
                $('#RequiredDeptGUID').find('option[value="c703f18e-df3d-4cc2-b1fe-4f6a8d690bdc"]').prop('selected', true);
                $.getJSON("@Url.Action("GetEmployeesByDept","Projects")", { DeptGUID:'c703f18e-df3d-4cc2-b1fe-4f6a8d690bdc'}, function (data) {
                    var docFrag = $(document.createDocumentFragment());
                    $.each(data, function (index,emp) {
                        var opt = $('<option></option>').text(emp.EmployeeName).val(emp.EmployeeGUID);
                        docFrag.append(opt);
                    });
                    $('#RequiredDeptPMGUID').html(docFrag);
                });
                $('#ProjectStatusID').val(1);
                $('#ProjectCategoryID').val(3);
                $('#ProjectSupervisorDeptGUID').find('option:nth-child(7)').prop('selected', true);
                $('#ProjectSupervisorGUID').find('option:nth-child(4)').prop('selected', true);
                $('#ProjectBudget').val(100000);
                $('#EstEndDate').val('2019-01-07');*@

            });
        });
    </script>

}
